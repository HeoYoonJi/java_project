<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 도서 썸네일 이미지 -->
	<resources mapping="/thumb/**" location="file:///D:/student/ssm/works/project3/sql/img/small/" />
	<!-- <resources mapping="/thumb/**" location="file:///D:/student/lsh/works/egov4/project-ing/sql/img/small/" /> -->
	<resources mapping="/thumb2/**" location="/resources/img/" />
	
	<!-- css -->
	<resources mapping="/css/**" location="/resources/css/" />
	
	<!-- javascript -->
	<resources mapping="/js/**" location="/resources/js/" />
	
    <!-- webjars javascript path -->
    <resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
    
    <!-- jQuery -->
    <resources mapping="/jQuery/**" location="/resources/js/jquery/" />
   
    <!-- AngularJS -->
    <resources mapping="/angularjs/**" location="/resources/js/angularjs/" />
   
    <!-- bootstrap -->
    <resources mapping="/bootstrap/**" location="/resources/js/bootstrap/" />

	<!-- ViewResolver : since Spring 4.2 -->
    <beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
       
        <!-- <beans:property name="defaultContentType" value="text/html" /> -->
     
        <!-- 사용할 front media contentType 지정 -->
        <beans:property name="mediaTypes">
            <beans:map>
              <beans:entry key="html" value="text/html"/>
              <beans:entry key="json" value="application/json"/>
            </beans:map>
        </beans:property>
        
    </beans:bean>

	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	     
        <beans:property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        	
        <beans:property name="viewResolvers">
            <beans:list>
              
				<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>

				<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
				  <beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
				  <beans:property name="prefix" value="/WEB-INF/views/"/>
				  <beans:property name="suffix" value=".jsp"/>
				  <beans:property name="order" value="1" />
				</beans:bean>
			  
			  	<!-- Apache Tiles --><!-- 우선 순위 적용 : 최우선-->
				<!-- <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
					<beans:property name="order" value="1" />
				</beans:bean> -->

				<!-- <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
					<beans:property name="definitions">
						<beans:list>
							<beans:value>/WEB-INF/tiles/tiles-def.xml</beans:value>
						</beans:list>
					</beans:property>
				</beans:bean> -->
				
            </beans:list>
        </beans:property>
     
        <!-- 위에서 지정된 media에서 다루지 못한 media를 다루는 ViewResolver -->
        <beans:property name="defaultViews">
            <beans:list>
              
              <!-- deprecated : since Spring 4.3 부터 대체됨 -->
              <beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
            </beans:list>
        </beans:property>
     
    </beans:bean>
    
    <!-- Component Path -->
	<context:component-scan base-package="com.ssm.project.controller" />
	<context:component-scan base-package="com.ssm.project.service" />
	<context:component-scan base-package="com.ssm.project.dao" />
	<context:component-scan base-package="com.ssm.project.domain" />
	<context:component-scan base-package="com.ssm.project.aop" />
	<context:component-scan base-package="com.ssm.project.util" />
	<context:component-scan base-package="com.ssm.project.typehandler" />
	<context:component-scan base-package="com.ssm.project.mapper" />
	
	 <!-- Fileupload : 파일 관리자 id(multipartResolver)는 가급적 그대로 사용할 것! -->    
    <beans:bean id="multipartResolver"
               class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
                  <beans:property name="maxUploadSize" value="52428800" />  
    </beans:bean>          
     
    <!-- File repository : 파일 저장소 -->  
    <beans:bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
        <beans:constructor-arg>
           <beans:value>D:/upload/</beans:value>
        </beans:constructor-arg>
    </beans:bean>
</beans:beans>
